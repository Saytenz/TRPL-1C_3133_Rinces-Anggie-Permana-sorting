//no1
void insertionSort(List<int> arr) {

for (int i = 1; i < arr.length; i++) {

int key arr[i];

int ji1;

while (j >= 0 && arr[j] > key) {

arr[j + 1] = arr[j]; // Geser elemen ke kanan

j--;

arr[j + 1] = key; // Tempatkan elemen di posisi yang benar

}

}

Run | Debug

void main() {

List<int> data = [5, 3, 8, 2, 1, 4];

insertionSort(data);

print("Hasil sorting: $data");

}

//no2
void selectionSort (List<int> arr) {

int n arr.length;

for (int i = 0; i < n 1; i++) {

int minIndex = i;

for (int j=i+1; j < n; j++) {

if (arr[j] < arr[minIndex]) {

minIndex = j; // Temukan indeks nilai terkecil

}

}

// Tukar elemen

int temp = arr[i];

arr[i] = arr[minIndex];

arr[minIndex] = temp;
}
}

Run | Debug

void main() {

List<int> data [5, 3, 8, 2, 1, 4];

selectionSort(data);

print("Hasil sorting: $data");

}

//no3
void bubblesort (List<int> arr) {

int n = arr.length;

for (int i = 0; i < n - 1; i++) {

bool swapped = false;

for (int j = 0; j<ni 1; j++) {

if (arr[j] > arr[j + 1]) {

int temp = arr[j];

arr[j] = arr[j + 1];

arr[j + 1] = temp;

swapped = true;
}
}

if (!swapped) break;

}

}

Run | Debug

void main() {

List<int> data = [5, 3, 8, 2, 1, 4];

bubbleSort(data);

print("Hasil sorting: $data");

}

//no4

void shellsort(List<int> arr) {

int n = arr.length;

int gap = n ~/ 2;

while (gap > 0) {

for (int i = gap; i < n; i++) {

int temp = arr[i];

int j = i;

while (j >= gap && arr[j gap] > temp) {

arr[j] = arr[j- gap];

j -= gap;

}

arr[j] = temp;

}

gap ~/= 2;

}

}

Run | Debug

void main(){

List<int> data = [5, 3, 8, 2, 1, 4];

shellsort(data);

print("Hasil sorting: $data");

}
